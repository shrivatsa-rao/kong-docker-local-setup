version: '2.2'

networks:
  kong-edu-net:
    name: kong-edu-net
    driver: bridge

services:
  postgres:
    networks:
    - kong-edu-net
    image: postgres:13.1
    container_name: postgres
    hostname: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong

  kong-migrations:
      networks:
      - kong-edu-net
      image: kong/kong-gateway:3.0.0.0
      container_name: kong-migrations
      depends_on:
      - postgres        
      command: kong migrations bootstrap
      restart: on-failure
      environment:
        KONG_DATABASE: postgres
        KONG_PG_HOST: postgres
        KONG_PG_DATABASE: kong
        KONG_PG_USER: kong
        KONG_PG_PASSWORD: kong
        KONG_PASSWORD: password
      #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    
  kong-migrations-up:
    networks:
    - kong-edu-net
    image: kong/kong-gateway:3.0.0.0
    container_name: kong-migrations-up
    depends_on:
    - kong-migrations
    command: kong migrations up && kong-migrations finish
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
     #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}

  kong:
    networks:
    - kong-edu-net
    image: kong/kong-gateway:3.0.0.0
    container_name: kong
    depends_on:
    - kong-migrations-up
    restart: on-failure
    environment: 
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PORTAL_GUI_HOST: localhost:8003
      KONG_PORTAL: "on"
#       portal_auth: basic-auth
#       portal_session_conf: {
#       "storage":"kong",
#     "cookie_name":"portal_session",
#     "cookie_domain": ".xyz.com",
#     "secret":"super-secret",
#     "cookie_secure":false,
#     "rolling_timeout":31557600,
#     "cookie_same_site":"off"
# }


    ports:
    - "8000:8000/tcp"
    - "8002:8002/tcp"
    - "8001:8001/tcp"
    - "8443:8443/tcp"
    - "8003:8003/tcp"
     #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}


  
  prometheus:
      networks:
        - kong-edu-net
      image: prom/prometheus:v2.34.0
      container_name: prometheus
      hostname: prometheus
      command: --config.file=/etc/prometheus/prometheus.yaml --log.level=debug
      healthcheck:
        test: ["CMD", "wget", "-S", "--spider", "http://prometheus:9090"]
        interval: 10s
        timeout: 15s
        retries: 10  
      ports:
      - 9090:9090
      volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
      networks:
        - kong-edu-net
      image: grafana/grafana:8.4.6
      container_name: grafana
      hostname: grafana
      depends_on:
      - prometheus
      healthcheck:
        test: ["CMD", "wget", "-S", "--spider", "http://grafana:3000"]
        interval: 10s
        timeout: 15s
        retries: 10 
      ports:
      - 3000:3000


 